#!/usr/bin/env php
<?php

$_ENV['HOME'] = getenv('HOME');
$_ENV['VAGRANT_DOTFILE_PATH'] = homestead_path().DIRECTORY_SEPARATOR.'.vagrant';

if (file_exists(__DIR__.'/vendor/autoload.php')) {
    require __DIR__.'/vendor/autoload.php';
} else {
    require __DIR__.'/../../autoload.php';
}

function homestead_path()
{
    if (isset($_SERVER['HOME'])) {
        return $_SERVER['HOME'].'/.sweet-home';
    } else {
        return $_SERVER['HOMEDRIVE'].$_SERVER['HOMEPATH'].DIRECTORY_SEPARATOR.'.sweet-home';
    }
}

$app = new Symfony\Component\Console\Application('Sweet Home', '0.1.2');

$app->add(new Laravel\Sweethome\DestroyCommand);
$app->add(new Laravel\Sweethome\EditCommand);
$app->add(new Laravel\Sweethome\HaltCommand);
$app->add(new Laravel\Sweethome\InitCommand);
$app->add(new Laravel\Sweethome\MakeCommand);
$app->add(new Laravel\Sweethome\ProvisionCommand);
$app->add(new Laravel\Sweethome\ResumeCommand);
$app->add(new Laravel\Sweethome\RunCommand);
$app->add(new Laravel\Sweethome\UpCommand);
$app->add(new Laravel\Sweethome\UpdateCommand);
$app->add(new Laravel\Sweethome\SshCommand);
$app->add(new Laravel\Sweethome\SshConfigCommand);
$app->add(new Laravel\Sweethome\StatusCommand);
$app->add(new Laravel\Sweethome\SuspendCommand);

$app->run();
